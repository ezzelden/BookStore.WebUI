@model BookStore.Domain.Entities.ShippingDetails

@{
    ViewBag.Titel = "BooksStore : Checkout";
}

<h2>Checkout Now</h2>
<p>Please Enter Your Details, and We'll Ship Your Books Right Away</p>

@using (Html.BeginForm())
{
    @Html.ValidationSummary()
    <h3>Ship To</h3>
    <div class="form-group">
        <label>Name:</label>
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control " })
    </div>

    <h3>Address</h3>

    foreach (var prop in ViewData.ModelMetadata.Properties)
    {
        if (prop.PropertyName != "Name" && prop.PropertyName != "GiftWrap")
        {
            <div class="form-group">
                <label>@(prop.DisplayName ?? prop.PropertyName):</label>
                @Html.TextBox(prop.PropertyName,null, new { @class = "form-control " })
            </div>
        }
    }

    <h3>Options</h3>
    <div class="checkbox">
        <label>
            @Html.EditorFor(x => x.GiftWrap ) 
            Gift Wrap This Book(s)
        </label>
    </div>


    <div class="text-center " >
        <input type="submit" class="btn btn-primary"  value="Complete Order"/>
    </div>


}



@*<div class="form-group">
        <label>Line1:</label>
        @Html.TextBoxFor(x => x.Line1, new { @class = "form-control " })
    </div>
    <div class="form-group">
        <label>Line2:</label>
        @Html.TextBoxFor(x => x.Line2, new { @class = "form-control " })
    </div>
    <div class="form-group">
        <label>City</label>
        @Html.TextBoxFor(x => x.City, new { @class = "form-control " })
    </div>
    <div class="form-group">
        <label>State:</label>
        @Html.TextBoxFor(x => x.State, new { @class = "form-control " })
    </div>
    <div class="form-group">
       <label>Country:</label>
        @Html.TextBoxFor(x => x.Country, new { @class = "form-control " })
    </div>

*@